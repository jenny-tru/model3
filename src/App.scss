html,
body {
  height: 100%;
  width: 100%;
  margin: 0;
  padding: 0;
}
* {
  box-sizing: border-box;
  position: relative;
}

#model3 {
  height: 100vh;
  width: 100vw;
  display: grid;
  grid-template-rows: 90% 10%;
  background: #111;
  padding: 2rem;
}

.screen {
  grid-row: 1 / 2;
  display: grid;
  grid-template-columns: 35% 75%;
  grid-template-rows: 100%;
  border-radius: 1rem;
  overflow: hidden;

  > .drive-view {
    grid-column: 1 / 2;
    text-align: center;
    text-emphasis: bold;
  }

  > .map {
    grid-column: 2 / 3;
  }
}

.drive-view {
  box-shadow: 1rem 0 2rem rgba(black, 0.1);
  display: inline-grid;
  grid-template-rows: 14% 8% 60% 22%;
  z-index: 1;
  background-color: rgba(224, 215, 215, 0.966);

  > .prndl {
    text-align: left;
    font-family: sans-serif;
  }

  > .car-view > img {
    height: 100%;
    width: 100%;
  }

  > .accessibility > img {
    height: 100%;
    width: 100%;
  }
}

.map {
  background: white;
  grid-column: 2 / 3;
  grid-row: 1 / 2;
}

#menu {
  display: flex;
  flex-direction: row; // --------->>>>>
  justify-content: space-between;
  align-items: center;

  .item {
    border: 1px solid rgba(255, 255, 255, 0.267);
    height: 4rem;
    width: 5rem;
    text-align: center;
    color: white;

    // how to center vertically + horizontally with flexbox!
    display: flex;
    justify-content: center; // ---x---
    align-items: center; // vertical

    button {
      font-size: 200%;
      appearance: none;
      border: none;
      background: none;
    }
  }
}

.speed {
  display: flex;
  justify-content: center;
}

.speed-number {
  display: block;
  height: 55px;
  width: 55px;
  border-radius: 50%;
  font-size: 100%;
  border: 3px solid gray;
}

.view-container {
  display: grid;
  grid-column: 2 / 3; // 1 | 2 | 3
  grid-row: 1 / 2;
  padding: 0 1rem;
  align-items: end;
}

.view {
  padding: 1rem;
  background: white;
  border-top-left-radius: 1rem;
  border-top-right-radius: 1rem;
  z-index: 1;
  grid-row: 1 / -1; // top to bottom inside of view-container
  grid-column: 1 / -1; // left to right inside of view-container

  transition: transform 0.3s; // property, duration

  // transform:
  // - translate (x/y)
  // - rotate
  // - scale (x/y)
  // - skew / /  \ \

  // if it has that data-active attribute (if it's on the element... <div data-active="whatever">)
  &[data-active] {
    transform: none;
  }

  // hide!
  &:not([data-active]) {
    transform: translateY(100% /* of its own height */); // vertical
  }

  &[data-status="full"] {
    height: 80%;
  }
}
